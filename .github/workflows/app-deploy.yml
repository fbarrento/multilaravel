name: Deploy App to ECS

on:
  push:
    branches:
      - main
      - production
      - development
    paths:
      - 'main/**'
      - 'admin/**'
      - '.github/workflows/app-deploy.yml'
      - 'docker/**'
      - 'Dockerfile'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        default: 'staging'
        options:
          - development
          - staging
          - production

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'eu-central-1' }}

jobs:
  determine-environment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      php-image-tag: ${{ steps.tag.outputs.php-tag }}
      nginx-image-tag: ${{ steps.tag.outputs.nginx-tag }}
      base-tag: ${{ steps.tag.outputs.base-tag }}
    steps:
      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ENVIRONMENT="${{ github.event.inputs.environment }}"
          else
            case "${{ github.ref_name }}" in
              development)
                ENVIRONMENT="development"
                ;;
              main)
                ENVIRONMENT="staging"
                ;;
              production)
                ENVIRONMENT="production"
                ;;
              *)
                ENVIRONMENT="development"
                ;;
            esac
          fi
          echo "Environment determined: $ENVIRONMENT"
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

      - name: Generate image tag
        id: tag
        run: |
          ENVIRONMENT=$(echo "${{ steps.env.outputs.environment }}")
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          BASE_TAG="${ENVIRONMENT}-${TIMESTAMP}-${SHORT_SHA}"
          
          PHP_TAG="${BASE_TAG}"
          NGINX_TAG="${BASE_TAG}"
          
          echo "base-tag=${TAG}" >> $GITHUB_OUTPUT
          echo "php-tag=${PHP_TAG}" >> $GITHUB_OUTPUT
          echo "nginx-tag=${NGINX_TAG}" >> $GITHUB_OUTPUT
          
          echo "Generated Base: ${BAE_TAG}"
          echo "Generated PHP: ${PHP_TAG}"
          echo "Generated NGINX: ${NGINX_TAG}"

  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push Docker Image
    needs: determine-environment
    environment: ${{ needs.determine-environment.outputs.environment }}
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    outputs:
      php-image-uri: ${{ steps.push.outputs.image-uri }}
      nginx-image-uri: ${{ steps.push.outputs.image-uri }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION || 'eu-central-1' }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push PHP Docker Image
        id: build-php
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          PHP_REPOSITORY: laravel-app/app
          PHP_IMAGE_TAG: ${{ needs.determine-environment.outputs.php-image-tag }}
          ENVIRONMENT: ${{ needs.determine-environment.outputs.environment }}
        run: |
          echo "🏗️ Building Docker image..."
          
          # Build the image
          docker build \
            --target php \
            --build-arg APP_ENV=$ENVIRONMENT \
            --tag $ECR_REGISTRY/$PHP_REPOSITORY:$PHP_IMAGE_TAG \
            --tag $ECR_REGISTRY/$PHP_REPOSITORY:$ENVIRONMENT-latest \
            .
          
          echo "📤 Pushing to ECR..."
          
          # Push both tags
          docker push $ECR_REGISTRY/$PHP_REPOSITORY:$PHP_IMAGE_TAG
          docker push $ECR_REGISTRY/$PHP_REPOSITORY:$ENVIRONMENT-latest
          
          # Output the image URI
          IMAGE_URI="$ECR_REGISTRY/$PHP_REPOSITORY:$PHP_IMAGE_TAG"
          echo "image-uri=$PHP_IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "✅ Image pushed: $IMAGE_URI"
          
      - name: Build and Push Nginx Docker Image
        id: build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          NGINX_REPOSITORY: laravel-app/nginx
          NGINX_IMAGE_TAG: ${{ needs.determine-environment.outputs.nginx-image-tag }}
          ENVIRONMENT: ${{ needs.determine-environment.outputs.environment }}
        working-directory: ./docker/nginx
        run: |
          echo "🏗️ Building Docker image..."

          # Build the image
          docker build \
            --target php \
            --build-arg APP_ENV=$ENVIRONMENT \
            --tag $ECR_REGISTRY/$NGINX_REPOSITORY:$NGINX_IMAGE_TAG \
            --tag $ECR_REGISTRY/$NGINX_REPOSITORY:$ENVIRONMENT-latest \
            .

          echo "📤 Pushing to ECR..."

          # Push both tags
          docker push $ECR_REGISTRY/$NGINX_REPOSITORY:$NGINX_IMAGE_TAG
          docker push $ECR_REGISTRY/$NGINX_REPOSITORY:$ENVIRONMENT-latest

          # Output the image URI
          IMAGE_URI="$ECR_REGISTRY/$NGINX_REPOSITORY:$NGINX_IMAGE_TAG"
          echo "image-uri=$NGINX_IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "✅ Image pushed: $IMAGE_URI"